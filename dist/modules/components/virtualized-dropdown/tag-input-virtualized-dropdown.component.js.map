{"version":3,"file":"tag-input-virtualized-dropdown.component.js","sourceRoot":"","sources":["../../../../modules/components/virtualized-dropdown/tag-input-virtualized-dropdown.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    ViewChild,\n    forwardRef,\n    Inject,\n    TemplateRef,\n    ContentChildren,\n    Input,\n    QueryList,\n    HostListener,\n    EventEmitter,\n    NgZone\n} from '@angular/core';\n\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\nimport { ChangeEvent, VirtualScrollComponent } from 'angular2-virtual-scroll';\n\nimport { TagModel } from '../../core';\nimport { TagInputComponent } from '../../components';\n\n// rx\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/mergeMap';\n\n@Component({\n    selector: 'tag-input-virtualized-dropdown',\n    templateUrl: './tag-input-virtualized-dropdown.template.html',\n    styles: [`\n        /deep/ ng2-dropdown-menu div.ng2-dropdown-menu {\n            overflow-y: hidden !important;\n            height: 100% !important;\n        }\n        \n        /deep/ ng2-dropdown-menu div.ng2-dropdown-menu__options-container {\n            height: inherit;\n        }\n    `]\n})\nexport class TagInputVirtualizedDropdown {\n    /**\n     * @name dropdown\n     */\n    @ViewChild(Ng2Dropdown) public dropdown: Ng2Dropdown;\n\n    /**\n     * @name vScroll\n     * @desc reference to the virtualized component\n     * @type {VirtualScrollComponent}\n     */\n    @ViewChild(VirtualScrollComponent) public vScroll: VirtualScrollComponent;\n\n    /**\n     * @name menuTemplate\n     * @desc reference to the template if provided by the user\n     * @type {TemplateRef}\n     */\n    @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\n\n    @Input() public dropdownMenuItemWidth: number;\n\n    @Input() public dropdownMenuItemHeight = 48;\n\n    @Input() public scrollbarWidth: number;\n\n    @Input() public scrollbarHeight: number;\n\n    /**\n     * @name offset\n     * @type {string}\n     */\n    @Input() public offset = '50 0';\n\n    /**\n     * @name focusFirstElement\n     * @type {boolean}\n     */\n    @Input() public focusFirstElement = false;\n\n    /**\n     * - show autocomplete dropdown if the value of input is empty\n     * @name showDropdownIfEmpty\n     * @type {boolean}\n     */\n    @Input() public showDropdownIfEmpty = false;\n\n    /**\n     * @description observable passed as input which populates the autocomplete items\n     * @name autocompleteObservable\n     */\n    @Input() public autocompleteObservable: (text: string, skip: number, limit: number) => Observable<any>;\n\n    @Input() public loadThresholdOfAutocompleteItems = 95;\n\n    @Input() public totalOfItemsObservable: (text: string) => Observable<number>;\n\n    @Input() public autocompleteObservableFetchLimit = 100;\n\n    /**\n     * - desc minimum text length in order to display the autocomplete dropdown\n     * @name minimumTextLength\n     */\n    @Input() public minimumTextLength = 1;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy = 'display';\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy = 'value';\n\n    /**\n     * @description a function a developer can use to implement custom matching for the autocomplete\n     * @name matchingFn\n     */\n    @Input() public matchingFn: (value: string, target: TagModel) => boolean =\n         (value: string, target: TagModel): boolean => {\n            const targetValue = target[this.displayBy].toString();\n\n            return targetValue && targetValue\n                .toLowerCase()\n                .indexOf(value.toLowerCase()) >= 0;\n    }\n\n    /**\n     * @name appendToBody\n     * @type {boolean}\n     */\n    @Input() public appendToBody = true;\n\n    /**\n     * list of items that match the current value of the input (for autocomplete)\n     * @name items\n     * @type {TagModel[]}\n     */\n    public items: TagModel[] = [];\n\n    /**\n     * @name _autocompleteItems\n     * @type {Array}\n     * @private\n     */\n    private _autocompleteItems: TagModel[] = [];\n\n    /**\n     * @name autocompleteItems\n     * @param items\n     */\n    public set autocompleteItems(items: TagModel[]) {\n        this._autocompleteItems = items;\n    }\n\n    /**\n     * @name autocompleteItems\n     * @desc array of items that will populate the autocomplete\n     * @type {Array<string>}\n     */\n    @Input() public get autocompleteItems(): TagModel[] {\n        const items = this._autocompleteItems;\n\n        if (!items) {\n            return [];\n        }\n\n        return items.map((item: TagModel) => {\n            return typeof item === 'string' ? {\n                [this.displayBy]: item,\n                [this.identifyBy]: item\n            } : item;\n        });\n    }\n\n    @Input() public flexibleMenuHeight: boolean = false;\n\n    constructor(\n        @Inject(forwardRef(() => TagInputComponent)) private tagInput: TagInputComponent\n    ) {}\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        if (this.loadThresholdOfAutocompleteItems > 100 || this.loadThresholdOfAutocompleteItems < 0) {\n            this.loadThresholdOfAutocompleteItems = 95;\n        }\n\n        this.onItemClicked()\n            .subscribe(this.requestAdding);\n\n        // reset itemsMatching array when the dropdown is hidden\n        this.onHide()\n            .subscribe(this.resetItems);\n\n        this.tagInput.inputForm.onKeyup\n            .subscribe(this.show);\n\n        if (this.autocompleteObservable) {\n            this.tagInput\n                .onTextChange\n                .filter((text: string) => text.trim().length >= this.minimumTextLength)\n                .subscribe((text: string) =>\n                    this.getItemsFromObservable(text, 0, this.autocompleteObservableFetchLimit));\n\n            if (this.totalOfItemsObservable) {\n                this.vScroll\n                    .end\n                    .debounceTime(350)\n                    .filter((e: ChangeEvent) => {\n                        const autocompleteItemsCount = this.autocompleteItems.length - this.tagInput.items.length;\n                        const scrolled = Math.floor((e.end * 100) / autocompleteItemsCount);\n\n                        return this.autocompleteItems.length > 0\n                            && scrolled >= this.loadThresholdOfAutocompleteItems\n                            && !this.tagInput.isLoading;\n                    })\n                    .flatMap((e: ChangeEvent) => this.totalOfItemsObservable(this.tagInput.inputTextValue))\n                    .filter(total => total > this.autocompleteItems.length + this.autocompleteObservableFetchLimit)\n                    .subscribe(\n                        () => this.getItemsFromObservable(this.tagInput.inputTextValue,\n                            this.autocompleteItems.length, this.autocompleteObservableFetchLimit)\n                    );\n            }\n        }\n\n        this.dropdown.onShow.subscribe(() => {\n            setTimeout(() => this.vScroll.refresh(), 150);\n        });\n    }\n\n    /**\n     * @name updatePosition\n     */\n    public updatePosition(): void {\n        const position = this.tagInput.inputForm.getElementPosition();\n        this.dropdown.menu.updatePosition(position);\n    }\n\n    /**\n     * @name isVisible\n     * @returns {boolean}\n     */\n    public get isVisible(): boolean {\n        return this.dropdown.menu.state.menuState.isVisible;\n    }\n\n    /**\n     * @name onHide\n     * @returns {EventEmitter<Ng2Dropdown>}\n     */\n    public onHide(): EventEmitter<Ng2Dropdown> {\n        return this.dropdown.onHide;\n    }\n\n    /**\n     * @name onItemClicked\n     * @returns {EventEmitter<string>}\n     */\n    public onItemClicked(): EventEmitter<string> {\n        return this.dropdown.onItemClicked;\n    }\n\n    /**\n     * @name selectedItem\n     * @returns {Ng2MenuItem}\n     */\n    public get selectedItem(): Ng2MenuItem {\n        return this.dropdown.menu.state.dropdownState.selectedItem;\n    }\n\n    /**\n     * @name state\n     * @returns {DropdownStateService}\n     */\n    public get state(): any {\n        return this.dropdown.menu.state;\n    }\n\n    /**\n     *\n     * @name show\n     */\n    public show = (): void => {\n        const value: string = this.tagInput.inputForm.value.value.trim();\n        const position: ClientRect = this.tagInput.inputForm.getElementPosition();\n        const items: TagModel[] = this.getMatchingItems(value);\n        const hasItems: boolean = items.length > 0;\n        const showDropdownIfEmpty: boolean = this.showDropdownIfEmpty && hasItems && !value;\n        const hasMinimumText: boolean = value.length >= this.minimumTextLength;\n\n        const assertions: boolean[] = [\n            hasItems,\n            this.isVisible === false,\n            hasMinimumText\n        ];\n\n        const showDropdown: boolean = (assertions.filter(item => item).length === assertions.length) ||\n            showDropdownIfEmpty;\n        const hideDropdown: boolean = this.isVisible && (!hasItems || !hasMinimumText);\n\n        // set items\n        this.setItems(items);\n\n        if (this.flexibleMenuHeight) {\n            const el: HTMLElement = this.dropdown.menu['element']['nativeElement']['children'][0];\n\n            const totalHeight = items.length * this.dropdownMenuItemHeight;\n\n            if (el.style.height) {\n                el.style.cssText.replace(/(height\\:)\\s*[0-9]+(px|%)\\s*(!important)?;?/i, '');\n            }\n\n            const newHeight = totalHeight < 400 ? (totalHeight + 10).toString() + 'px' : '100%';\n\n            el.setAttribute('style', el.style.cssText + `height: ${newHeight} !important;`);\n        }\n\n        if (showDropdown && !this.isVisible) {\n            this.dropdown.show(position);\n        } else if (hideDropdown) {\n            this.dropdown.hide();\n        }\n    }\n\n    /**\n     * @name scrollListener\n     */\n    @HostListener('window:scroll')\n    public scrollListener(): void {\n        if (!this.isVisible) {\n            return;\n        }\n\n        this.updatePosition();\n    }\n\n    /**\n     * @name requestAdding\n     * @param item {Ng2MenuItem}\n     */\n    private requestAdding = (item: Ng2MenuItem): void => {\n        if (!item) {\n            return;\n        }\n\n        const model = this.createTagModel(item);\n\n        // add item\n        this.tagInput.onAddingRequested(true, model);\n\n        // hide dropdown\n        this.dropdown.hide();\n    }\n\n    /**\n     * @name createTagModel\n     * @param item\n     * @return {{}}\n     */\n    private createTagModel(item: Ng2MenuItem): TagModel {\n        const display = typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n        const value = typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n\n        return {\n            ...item.value,\n            [this.tagInput.displayBy]: display,\n            [this.tagInput.identifyBy]: value\n        };\n    }\n\n    /**\n     *\n     * @param value {string}\n     * @returns {any}\n     */\n    private getMatchingItems(value: string): TagModel[] {\n        if (!value && !this.showDropdownIfEmpty) {\n            return [];\n        }\n\n        return this.autocompleteItems.filter((item: TagModel) => {\n            const hasValue: boolean = this.tagInput.tags.some(tag => {\n                const identifyBy = this.tagInput.identifyBy;\n                const model = typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n\n                return model === item[this.identifyBy];\n            });\n\n            return this.matchingFn(value, item) && hasValue === false;\n        });\n    }\n\n    /**\n     * @name setItems\n     */\n    private setItems(items: TagModel[]): void {\n        this.items = items;\n    }\n\n    /**\n     * @name resetItems\n     */\n    private resetItems = (): void => {\n        this.items = [];\n\n        if (this.autocompleteObservable) {\n            this.autocompleteItems = [];\n        }\n    }\n\n    /**\n     * @name populateItems\n     * @param data\n     */\n    private populateItems(data: any, concat: boolean): TagInputVirtualizedDropdown {\n        const formattedItems = data.map(item => {\n            return typeof item === 'string' ? {\n                [this.displayBy]: item,\n                [this.identifyBy]: item\n            } : item;\n        });\n\n        this.autocompleteItems = concat ? [...this.autocompleteItems].concat(formattedItems) : formattedItems;\n\n        return this;\n    }\n\n    /**\n     * @name getItemsFromObservable\n     * @param text\n     */\n    private getItemsFromObservable = (text: string, skip: number, limit: number): void => {\n        this.setLoadingState(true);\n\n        this.autocompleteObservable(text, skip, limit)\n            .subscribe(data => {\n                // hide loading animation\n                this.setLoadingState(false)\n                    // add items\n                    .populateItems(data, skip > 0)\n                    // show the dropdown\n                    .show();\n\n        }, () => this.setLoadingState(false));\n    }\n\n    /**\n     * @name setLoadingState\n     * @param state\n     * @return {TagInputDropdown}\n     */\n    private setLoadingState(state: boolean): TagInputVirtualizedDropdown {\n        this.tagInput.isLoading = state;\n\n        return this;\n    }\n}\n"]}